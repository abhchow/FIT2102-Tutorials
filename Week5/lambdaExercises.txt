Exercise 1:
    I combinator is x=>x
    It is the identity function
    You want to use it to preserve an input function, particularly when changing the order of curried inputs, such as in the K(I) combinator

Exercise 2:
    1. b
    2. b
        λxy.yx
        = λx(λy.yx)
        = λa(λb.ba)
    3. b

Exercise 3:
    1.  (λx.x)y
        λx [x:=y].x
        y
    2.  λx.xx
        Cannot be further reduced, no more functions to apply
    3.  (λx.xy)(λx.xx)
        λx [x:=λx.xx].xy
        (λx.xx)Y
        λx [x:=y].xx
        yy

    4.  (λx.xx)y
        λx [x:=y].xx
        yy

Exercise 4:
    1.  (λy.zy)a
        λy [y:=a].zy
        za
    2.  (λx.x)(λx.x)
        λx [x:=λx.x].x
        λx.x
    3.  (λx.xy)(λx.xx)
        λx [x:(λx.xx)].xy
        (λx.xx)y
        (λx [x:=y].xx)
        yy
    4.  (λz.z)(λa.aa)(λz.zb)
        (λz [z:=λa.aa].z)(λz.zb)
        (λa.aa)(λz.zb)
        (λa [a:=λz.zb].aa)
        (λz.zb)(λz.zb)
        λz [z:= λz.zb].zb
        (λz.zb)b
        (λz [z:=b].zb)b
        bb

Exercise 5:
    1.  λx.zx
        z
    2.  λx.xz
        Trick question, can't eta reduce because x is not the last variable in the expression
    3.  (λx.bx)(λy.ay)
        ba

Exercise 6:
    1.  λx.xxx
        Combinator
    2.  λxy.zx
        Not a combinator
    3.  λxyz.xy(zx)
        Combinator
    4.  λxyz.xy(zxy)
        Combinator

Exercise 7:
    Yg
    =(λf.(λx.f(xx))(λx.f(xx))) g
    =(λf [f:=g].(λx.f(xx))(λx.f(xx)))
    =(λx.g(xx))(λx.g(xx))
    =(λx [x=λx.g(xx)].g(xx))
    =g((λx.g(xx))(λx.g(xx)))
    =g(Yg)

Exercise 8:
    TRUE: (λxy. x)
    FALSE: (λxy. y)
    IF: (λbtf. b t f)       # condition true-action false-action
    AND: (λxy. IF x y FALSE)
    OR: (λxy. IF x TRUE y)
    NOT: (λx. IF x FALSE TRUE)

    1.  NOT FALSE
        (λx. IF x FALSE TRUE)FALSE
        (λx [x:=FALSE]. IF x FALSE TRUE)
        IF FALSE FALSE TRUE
        (λbtf. b t f) FALSE FALSE TRUE
        (λbtf [b:=FALSE, t:=FALSE, f:=TRUE]. b t f)
        FALSE FALSE TRUE
        (λxy. y) FALSE TRUE
        (λxy [x:= FALSE, y: TRUE]. y)
        TRUE

    2.  OR TRUE FALSE
        (λxy. IF x TRUE y) TRUE FALSE
        (λxy [x:=TRUE, y:=FALSE]. IF x TRUE y)
        IF TRUE TRUE FALSE
        (λbtf. b t f) TRUE TRUE FALSE
        (λbtf [b:=TRUE, t:=TRUE, f:=false]. b t f)
        TRUE TRUE FALSE
        (λxy. x) TRUE FALSE
        (λxy [x:= TRUE, y: FALSE]. y)
        TRUE

    3.  AND TRUE TRUE
        (λxy. IF x y FALSE) TRUE TRUE
        (λxy [x:=TRUE y:=TRUE]. IF x y FALSE)
        IF TRUE TRUE FALSE
        (λbtf. b t f) TRUE TRUE FALSE
        (λbtf [b:=TRUE, t:=TRUE, f:=false]. b t f)
        TRUE TRUE FALSE
        (λxy. x) TRUE FALSE
        (λxy [x:= TRUE, y: FALSE]. y)
        TRUE

